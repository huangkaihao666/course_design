import { NextRequest, NextResponse } from 'next/server';
import { spawn } from 'child_process';
import path from 'path';
import { DatabaseService } from '../../../lib/database';

interface Comment {
  user_nick: string;
  content: string;
  rating: number;
  date: string;
  useful_count: number;
  reply: string;
  sku_info: string;
  pics: string[];
}

export async function POST(request: NextRequest) {
  try {
    const { productId, maxPages, useDatabase = true } = await request.json();

    if (!productId) {
      return NextResponse.json(
        { error: 'ÂïÜÂìÅID‰∏çËÉΩ‰∏∫Á©∫' },
        { status: 400 }
      );
    }

    let cookies = '';
    let actualMaxPages = maxPages || 3;
    let configs: any[] = [];
    let configFound = false;

    // Â¶ÇÊûúÂêØÁî®Êï∞ÊçÆÂ∫ìÔºåÂ∞ùËØï‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÈÖçÁΩÆ
    if (useDatabase) {
      try {
        console.log(`üîç Ê≠£Âú®Êü•ËØ¢ÂïÜÂìÅ ${productId} ÁöÑÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ...`);
        configs = await DatabaseService.getSpiderConfigByProductId(productId) as any[];
        console.log(`üìä Êï∞ÊçÆÂ∫ìÊü•ËØ¢ÁªìÊûú: ÊâæÂà∞ ${configs.length} ‰∏™ÈÖçÁΩÆ`);
        
        if (configs && configs.length > 0) {
          const config = configs[0]; // ‰ΩøÁî®ÊúÄÊñ∞ÁöÑÈÖçÁΩÆ
          cookies = config.cookies || '';
          actualMaxPages = config.max_pages || maxPages || 3;
          configFound = true;
          console.log(`‚úÖ ‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÈÖçÁΩÆÊàêÂäü:`);
          console.log(`   - cookiesÈïøÂ∫¶: ${cookies.length}`);
          console.log(`   - maxPages: ${actualMaxPages}`);
          console.log(`   - ÈÖçÁΩÆID: ${config.id}`);
          console.log(`   - ÂàõÂª∫Êó∂Èó¥: ${config.created_at}`);
        } else {
          console.log('‚ùå Êï∞ÊçÆÂ∫ì‰∏≠Êú™ÊâæÂà∞ËØ•ÂïÜÂìÅÁöÑÈÖçÁΩÆÔºå‰ΩøÁî®ÈªòËÆ§ÂèÇÊï∞');
        }
      } catch (error) {
        console.error('‚ùå ‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÈÖçÁΩÆÂ§±Ë¥•:', error);
        console.log('‰ΩøÁî®ÈªòËÆ§ÂèÇÊï∞ÁªßÁª≠ÊâßË°å');
      }
    } else {
      console.log('‚ö†Ô∏è Êï∞ÊçÆÂ∫ìÂäüËÉΩÂ∑≤Á¶ÅÁî®Ôºå‰ΩøÁî®ÈªòËÆ§ÂèÇÊï∞');
    }

    // PythonÁà¨Ëô´ËÑöÊú¨Ë∑ØÂæÑ
    const spiderPath = path.join(process.cwd(), '..', 'crawl', 'spider.py');

    // ÊâßË°åPythonÁà¨Ëô´
    const result = await runSpider(spiderPath, productId, actualMaxPages, cookies);

    if (result.success) {
      // Ê£ÄÊü•ÊòØÂê¶ÊúâÁà¨Ëô´Êï∞ÊçÆ
      if (result.data && result.data.comments) {
        console.log(`‚úÖ Áà¨Ëô´ËøîÂõû‰∫Ü ${result.data.comments.length} Êù°ËØÑËÆ∫Êï∞ÊçÆ`);
        
        // ‰øùÂ≠òÊï∞ÊçÆÂà∞Êï∞ÊçÆÂ∫ì
        try {
          console.log('üíæ ‰øùÂ≠òËØÑËÆ∫Êï∞ÊçÆÂà∞Êï∞ÊçÆÂ∫ì...');
          // ËøôÈáåÈúÄË¶ÅÂÆûÁé∞‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÁöÑÈÄªËæë
          // ÊöÇÊó∂Áõ¥Êé•ËøîÂõûÊï∞ÊçÆ
          
          return NextResponse.json({
            success: true,
            data: result.data.comments,
            productInfo: result.data.product_info || { product_name: `ÂïÜÂìÅID: ${productId}` },
            message: `ÊàêÂäüÁà¨ÂèñÂπ∂‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÔºåÂÖ± ${result.data.comments.length} Êù°ËØÑËÆ∫`,
            debug: {
              usedDatabase: useDatabase,
              cookiesLength: cookies.length,
              actualMaxPages: actualMaxPages,
              configFound: configFound
            }
          });
        } catch (error) {
          console.error('‰øùÂ≠òÊï∞ÊçÆÂà∞Êï∞ÊçÆÂ∫ìÂ§±Ë¥•:', error);
          return NextResponse.json({
            success: true,
            data: result.data.comments,
            productInfo: result.data.product_info || { product_name: `ÂïÜÂìÅID: ${productId}` },
            message: `ÊàêÂäüÁà¨ÂèñÔºåÂÖ± ${result.data.comments.length} Êù°ËØÑËÆ∫Ôºà‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÂ§±Ë¥•Ôºâ`,
            debug: {
              usedDatabase: useDatabase,
              cookiesLength: cookies.length,
              actualMaxPages: actualMaxPages,
              configFound: configFound,
              saveError: error instanceof Error ? error.message : String(error)
            }
          });
        }
      } else {
        // Ê≤°ÊúâËé∑ÂèñÂà∞Êï∞ÊçÆÔºåÂ∞ùËØï‰ªéÊï∞ÊçÆÂ∫ìËé∑Âèñ
        try {
          const comments = await DatabaseService.getCommentsByProductId(productId) as Comment[];
          const productInfo = { product_name: `ÂïÜÂìÅID: ${productId}` };
          
          return NextResponse.json({
            success: true,
            data: comments,
            productInfo: productInfo,
            message: `ÊàêÂäüÁà¨ÂèñÂπ∂‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÔºåÂÖ± ${comments.length} Êù°ËØÑËÆ∫`,
            debug: {
              usedDatabase: useDatabase,
              cookiesLength: cookies.length,
              actualMaxPages: actualMaxPages,
              configFound: configFound
            }
          });
        } catch (error) {
          console.error('‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÊï∞ÊçÆÂ§±Ë¥•:', error);
          return NextResponse.json({
            success: true,
            data: [],
            productInfo: { product_name: `ÂïÜÂìÅID: ${productId}` },
            message: 'Áà¨ÂèñÂÆåÊàêÔºå‰ΩÜËé∑ÂèñÊï∞ÊçÆÊó∂Âá∫Áé∞ÈîôËØØ',
            debug: {
              usedDatabase: useDatabase,
              cookiesLength: cookies.length,
              actualMaxPages: actualMaxPages,
              configFound: configFound,
              error: error instanceof Error ? error.message : String(error)
            }
          });
        }
      }
    } else {
      return NextResponse.json(
        { error: result.error },
        { status: 500 }
      );
    }
  } catch (error) {
    console.error('APIÈîôËØØ:', error);
    return NextResponse.json(
      { error: 'ÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØ' },
      { status: 500 }
    );
  }
}

// Ëé∑ÂèñÂ∑≤Áà¨ÂèñÁöÑËØÑËÆ∫Êï∞ÊçÆÔºåÂ¶ÇÊûúÊ≤°ÊúâÊï∞ÊçÆÂàôËá™Âä®Áà¨Âèñ
export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const productId = searchParams.get('productId');
    const maxPages = parseInt(searchParams.get('maxPages') || '3');
    const useDatabase = searchParams.get('useDatabase') !== 'false'; // ÈªòËÆ§ÂêØÁî®Êï∞ÊçÆÂ∫ì

    if (!productId) {
      return NextResponse.json(
        { error: 'ÂïÜÂìÅID‰∏çËÉΩ‰∏∫Á©∫' },
        { status: 400 }
      );
    }

    let cookies = '';
    let actualMaxPages = maxPages;

    // Â¶ÇÊûúÂêØÁî®Êï∞ÊçÆÂ∫ìÔºåÂ∞ùËØï‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÈÖçÁΩÆ
    if (useDatabase) {
      try {
        const configs = await DatabaseService.getSpiderConfigByProductId(productId) as any[];
        if (configs && configs.length > 0) {
          const config = configs[0]; // ‰ΩøÁî®ÊúÄÊñ∞ÁöÑÈÖçÁΩÆ
          cookies = config.cookies || '';
          actualMaxPages = config.max_pages || maxPages;
          console.log(`‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÈÖçÁΩÆ: cookiesÈïøÂ∫¶=${cookies.length}, maxPages=${actualMaxPages}`);
        } else {
          console.log('Êï∞ÊçÆÂ∫ì‰∏≠Êú™ÊâæÂà∞ËØ•ÂïÜÂìÅÁöÑÈÖçÁΩÆÔºå‰ΩøÁî®ÈªòËÆ§ÂèÇÊï∞');
          // ‰ΩøÁî®ÈªòËÆ§cookies‰Ωú‰∏∫ÂêéÂ§á
          cookies = 't=8f8c6b0acfd465866dd8e9e2ef3f1e52; _tb_token_=e7f5e347e7467; thw=cn; sca=7620b646; xlly_s=1; _samesite_flag_=true; cookie2=1a394e6c096d55ee8ed6c05e8a3f252b; 3PcFlag=1758275266324; wk_cookie2=11ef152c8328fbab96c52320c81863f0; wk_unb=UUBfRqE2sd0fJQ%3D%3D; _hvn_lgc_=0; havana_lgc2_0=eyJoaWQiOjI4NzQ1NzE4MjIsInNnIjoiZjM3YmUyN2EzZDAzM2U3ZjEzYWI1NWZiZmZmNTkxZTkiLCJzaXRlIjowLCJ0b2tlbiI6IjF1NWVkLWFMY0F1dWZCcjJpZlFGenRRIn0; unb=2874571822; lgc=tb52079771; cancelledSubSites=empty; cookie17=UUBfRqE2sd0fJQ%3D%3D; dnk=tb52079771; tracknick=tb52079771; _l_g_=Ug%3D%3D; sg=12e; _nk_=tb52079771; cookie1=VT5Zk6h2%2BqNVOo4UBujinMRjF69%2FJohkVTOspWEVctU%3D; sn=; aui=2874571822; mtop_partitioned_detect=1; _m_h5_tk=66588b7909ea6afc1d6c0bd60dde6158_1758449754843; _m_h5_tk_enc=742f3070a5e46ccea0cf52607bfbf0b2; havana_sdkSilent=1758470276989; uc1=cookie16=URm48syIJ1yk0MX2J7mAAEhTuw%3D%3D&cookie21=W5iHLLyFeYZ1WM9hVnmS&cookie15=WqG3DMC9VAQiUQ%3D%3D&pas=0&cookie14=UoYbw1taX6hRAw%3D%3D&existShop=false; uc3=id2=UUBfRqE2sd0fJQ%3D%3D&lg2=Vq8l%2BKCLz3%2F65A%3D%3D&nk2=F5RAQI%2B%2FeGflCQ%3D%3D&vt3=F8dD2k69gqGk3XVIlgo%3D; csg=a62f9b06; skt=c9d6387eec7fb0da; existShop=MTc1ODQ0MTU3OQ%3D%3D; uc4=id4=0%40U2LNaXTVr%2BzfReMs%2FDEO7cDKxRBX&nk4=0%40FY4L7HCZjsAW%2BYbe61%2Be6wnAHnPQ; _cc_=VFC%2FuZ9ajQ%3D%3D; sgcookie=E100M%2B6txI5nmIp1SERy1%2Bdp3xmQSqB7D7jQGyLwO4gDReFhgJkzimsUNeEHtLEyr4ZdwjylLY%2BFmrijRPN0tJVcsGNzi8o7qzB%2Bp75bh8AufaaXUwmq8EmkLsjdePMKJrXA; havana_lgc_exp=1789545579179; sdkSilent=1758470379179; cna=WHpUIQ+wqxYCAQAAAABTmeyU; isg=BKKiPJV3PjI41CLsOhGAfNWi8y4E86YNQMmcm-wqWp3tv045w4KOHGp37vtDmx6l; tfstk=gE9rKJDZq9YbRvbRZK6U0T1L2AXR19us8p_CxHxhVabkNwweLZ-i2aGKweR2-EC5rQ_QLp72rJ1WLHeFxHYK2wi-G3KRp90s5Hk623L7iotDUaXconIGxucfZ0Pgf0us5AMjZoXEzVTCH1v93MQcq8bltmycYM6hxwjo0ZjFXW4k-emViMIF-ujh-tqcfZbhK9YHmmSCogXhKfJOg1kVj_mV9nhVSz1GaNxluRxX3gc57AQ0Kr9c4CFw4Z5fGKSPaN53-Yp6QhxkBMJKjW7eXQY5DekZutvyzLfVLvyAFhRDzsRr8-5vihphgI3a6hKkzCfMExoPgLK1EZJKvJQkNHvCTL0gAavJPK59pzufRCtXEs8il-8dTQAGEpuZngz8JiD7dpdz-W5lDi7s0mr-TsGaenezjWFdiesV50K89WCo-i7s0mPL9_HF0NiJ2';
        }
      } catch (error) {
        console.error('‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÈÖçÁΩÆÂ§±Ë¥•:', error);
        console.log('‰ΩøÁî®ÈªòËÆ§ÂèÇÊï∞ÁªßÁª≠ÊâßË°å');
        // ‰ΩøÁî®ÈªòËÆ§cookies‰Ωú‰∏∫ÂêéÂ§á
        cookies = 't=8f8c6b0acfd465866dd8e9e2ef3f1e52; _tb_token_=e7f5e347e7467; thw=cn; sca=7620b646; xlly_s=1; _samesite_flag_=true; cookie2=1a394e6c096d55ee8ed6c05e8a3f252b; 3PcFlag=1758275266324; wk_cookie2=11ef152c8328fbab96c52320c81863f0; wk_unb=UUBfRqE2sd0fJQ%3D%3D; _hvn_lgc_=0; havana_lgc2_0=eyJoaWQiOjI4NzQ1NzE4MjIsInNnIjoiZjM3YmUyN2EzZDAzM2U3ZjEzYWI1NWZiZmZmNTkxZTkiLCJzaXRlIjowLCJ0b2tlbiI6IjF1NWVkLWFMY0F1dWZCcjJpZlFGenRRIn0; unb=2874571822; lgc=tb52079771; cancelledSubSites=empty; cookie17=UUBfRqE2sd0fJQ%3D%3D; dnk=tb52079771; tracknick=tb52079771; _l_g_=Ug%3D%3D; sg=12e; _nk_=tb52079771; cookie1=VT5Zk6h2%2BqNVOo4UBujinMRjF69%2FJohkVTOspWEVctU%3D; sn=; aui=2874571822; mtop_partitioned_detect=1; _m_h5_tk=66588b7909ea6afc1d6c0bd60dde6158_1758449754843; _m_h5_tk_enc=742f3070a5e46ccea0cf52607bfbf0b2; havana_sdkSilent=1758470276989; uc1=cookie16=URm48syIJ1yk0MX2J7mAAEhTuw%3D%3D&cookie21=W5iHLLyFeYZ1WM9hVnmS&cookie15=WqG3DMC9VAQiUQ%3D%3D&pas=0&cookie14=UoYbw1taX6hRAw%3D%3D&existShop=false; uc3=id2=UUBfRqE2sd0fJQ%3D%3D&lg2=Vq8l%2BKCLz3%2F65A%3D%3D&nk2=F5RAQI%2B%2FeGflCQ%3D%3D&vt3=F8dD2k69gqGk3XVIlgo%3D; csg=a62f9b06; skt=c9d6387eec7fb0da; existShop=MTc1ODQ0MTU3OQ%3D%3D; uc4=id4=0%40U2LNaXTVr%2BzfReMs%2FDEO7cDKxRBX&nk4=0%40FY4L7HCZjsAW%2BYbe61%2Be6wnAHnPQ; _cc_=VFC%2FuZ9ajQ%3D%3D; sgcookie=E100M%2B6txI5nmIp1SERy1%2Bdp3xmQSqB7D7jQGyLwO4gDReFhgJkzimsUNeEHtLEyr4ZdwjylLY%2BFmrijRPN0tJVcsGNzi8o7qzB%2Bp75bh8AufaaXUwmq8EmkLsjdePMKJrXA; havana_lgc_exp=1789545579179; sdkSilent=1758470379179; cna=WHpUIQ+wqxYCAQAAAABTmeyU; isg=BKKiPJV3PjI41CLsOhGAfNWi8y4E86YNQMmcm-wqWp3tv045w4KOHGp37vtDmx6l; tfstk=gE9rKJDZq9YbRvbRZK6U0T1L2AXR19us8p_CxHxhVabkNwweLZ-i2aGKweR2-EC5rQ_QLp72rJ1WLHeFxHYK2wi-G3KRp90s5Hk623L7iotDUaXconIGxucfZ0Pgf0us5AMjZoXEzVTCH1v93MQcq8bltmycYM6hxwjo0ZjFXW4k-emViMIF-ujh-tqcfZbhK9YHmmSCogXhKfJOg1kVj_mV9nhVSz1GaNxluRxX3gc57AQ0Kr9c4CFw4Z5fGKSPaN53-Yp6QhxkBMJKjW7eXQY5DekZutvyzLfVLvyAFhRDzsRr8-5vihphgI3a6hKkzCfMExoPgLK1EZJKvJQkNHvCTL0gAavJPK59pzufRCtXEs8il-8dTQAGEpuZngz8JiD7dpdz-W5lDi7s0mr-TsGaenezjWFdiesV50K89WCo-i7s0mPL9_HF0NiJ2';
      }
    } else {
      // ‰ΩøÁî®ÈªòËÆ§cookies
      cookies = 't=8f8c6b0acfd465866dd8e9e2ef3f1e52; _tb_token_=e7f5e347e7467; thw=cn; sca=7620b646; xlly_s=1; _samesite_flag_=true; cookie2=1a394e6c096d55ee8ed6c05e8a3f252b; 3PcFlag=1758275266324; wk_cookie2=11ef152c8328fbab96c52320c81863f0; wk_unb=UUBfRqE2sd0fJQ%3D%3D; _hvn_lgc_=0; havana_lgc2_0=eyJoaWQiOjI4NzQ1NzE4MjIsInNnIjoiZjM3YmUyN2EzZDAzM2U3ZjEzYWI1NWZiZmZmNTkxZTkiLCJzaXRlIjowLCJ0b2tlbiI6IjF1NWVkLWFMY0F1dWZCcjJpZlFGenRRIn0; unb=2874571822; lgc=tb52079771; cancelledSubSites=empty; cookie17=UUBfRqE2sd0fJQ%3D%3D; dnk=tb52079771; tracknick=tb52079771; _l_g_=Ug%3D%3D; sg=12e; _nk_=tb52079771; cookie1=VT5Zk6h2%2BqNVOo4UBujinMRjF69%2FJohkVTOspWEVctU%3D; sn=; aui=2874571822; mtop_partitioned_detect=1; _m_h5_tk=66588b7909ea6afc1d6c0bd60dde6158_1758449754843; _m_h5_tk_enc=742f3070a5e46ccea0cf52607bfbf0b2; havana_sdkSilent=1758470276989; uc1=cookie16=URm48syIJ1yk0MX2J7mAAEhTuw%3D%3D&cookie21=W5iHLLyFeYZ1WM9hVnmS&cookie15=WqG3DMC9VAQiUQ%3D%3D&pas=0&cookie14=UoYbw1taX6hRAw%3D%3D&existShop=false; uc3=id2=UUBfRqE2sd0fJQ%3D%3D&lg2=Vq8l%2BKCLz3%2F65A%3D%3D&nk2=F5RAQI%2B%2FeGflCQ%3D%3D&vt3=F8dD2k69gqGk3XVIlgo%3D; csg=a62f9b06; skt=c9d6387eec7fb0da; existShop=MTc1ODQ0MTU3OQ%3D%3D; uc4=id4=0%40U2LNaXTVr%2BzfReMs%2FDEO7cDKxRBX&nk4=0%40FY4L7HCZjsAW%2BYbe61%2Be6wnAHnPQ; _cc_=VFC%2FuZ9ajQ%3D%3D; sgcookie=E100M%2B6txI5nmIp1SERy1%2Bdp3xmQSqB7D7jQGyLwO4gDReFhgJkzimsUNeEHtLEyr4ZdwjylLY%2BFmrijRPN0tJVcsGNzi8o7qzB%2Bp75bh8AufaaXUwmq8EmkLsjdePMKJrXA; havana_lgc_exp=1789545579179; sdkSilent=1758470379179; cna=WHpUIQ+wqxYCAQAAAABTmeyU; isg=BKKiPJV3PjI41CLsOhGAfNWi8y4E86YNQMmcm-wqWp3tv045w4KOHGp37vtDmx6l; tfstk=gE9rKJDZq9YbRvbRZK6U0T1L2AXR19us8p_CxHxhVabkNwweLZ-i2aGKweR2-EC5rQ_QLp72rJ1WLHeFxHYK2wi-G3KRp90s5Hk623L7iotDUaXconIGxucfZ0Pgf0us5AMjZoXEzVTCH1v93MQcq8bltmycYM6hxwjo0ZjFXW4k-emViMIF-ujh-tqcfZbhK9YHmmSCogXhKfJOg1kVj_mV9nhVSz1GaNxluRxX3gc57AQ0Kr9c4CFw4Z5fGKSPaN53-Yp6QhxkBMJKjW7eXQY5DekZutvyzLfVLvyAFhRDzsRr8-5vihphgI3a6hKkzCfMExoPgLK1EZJKvJQkNHvCTL0gAavJPK59pzufRCtXEs8il-8dTQAGEpuZngz8JiD7dpdz-W5lDi7s0mr-TsGaenezjWFdiesV50K89WCo-i7s0mPL9_HF0NiJ2';
    }

    console.log(`ÂºÄÂßãÁà¨ÂèñÂïÜÂìÅ ${productId} ÁöÑÊï∞ÊçÆÔºåÈ°µÊï∞: ${actualMaxPages}`);
    
    // ÊÄªÊòØÈáçÊñ∞Áà¨Âèñ
    console.log(`ÂºÄÂßãËá™Âä®Áà¨Âèñ ${actualMaxPages} È°µ...`);
    
    let comments: Comment[] = [];
    
    try {
      const spiderPath = path.join(process.cwd(), '..', 'crawl', 'spider.py');
      console.log(`Áà¨Ëô´ËÑöÊú¨Ë∑ØÂæÑ: ${spiderPath}`);
      
      const result = await runSpider(spiderPath, productId, actualMaxPages, cookies);
      console.log(`Áà¨Ëô´ÊâßË°åÁªìÊûú:`, result);
      
      if (result.success) {
        // Á≠âÂæÖÁà¨Ëô´ÂÆåÊàê
        console.log('Á≠âÂæÖÁà¨Ëô´ÂÆåÊàê...');
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // Áõ¥Êé•‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÊúÄÊñ∞Áà¨ÂèñÁöÑÊï∞ÊçÆ
        try {
          comments = await DatabaseService.getCommentsByProductId(productId) as Comment[];
          console.log(`‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÂà∞ ${comments.length} Êù°ËØÑËÆ∫`);
        } catch (error) {
          console.error('‰ªéÊï∞ÊçÆÂ∫ìËé∑ÂèñÊï∞ÊçÆÂ§±Ë¥•:', error);
        }
      } else {
        console.error('Ëá™Âä®Áà¨ÂèñÂ§±Ë¥•:', result.error);
      }
    } catch (error) {
      console.error('Áà¨Ëô´Ë∞ÉÁî®ÂºÇÂ∏∏:', error);
    }

    return NextResponse.json({
      success: true,
      data: comments,
      message: `ÊâæÂà∞ ${comments.length} Êù°ËØÑËÆ∫`
    });
  } catch (error) {
    console.error('Ëé∑ÂèñËØÑËÆ∫ÈîôËØØ:', error);
    return NextResponse.json(
      { error: 'Ëé∑ÂèñËØÑËÆ∫Â§±Ë¥•' },
      { status: 500 }
    );
  }
}

// ËøêË°åPythonÁà¨Ëô´
function runSpider(spiderPath: string, productId: string, maxPages: number, cookies: string = ''): Promise<{ success: boolean; error?: string; data?: any }> {
  console.log('Running spider with:', { productId, maxPages, cookiesLength: cookies.length });
  
  return new Promise((resolve) => {
    const pythonProcess = spawn('python3', ['spider.py'], {
      cwd: path.join(process.cwd(), '..', 'crawl'),
      env: {
        ...process.env,
        PRODUCT_ID: productId,
        MAX_PAGES: maxPages.toString(),
        COOKIES: cookies,
        USE_DATABASE: 'true'  // ÂêØÁî®Êï∞ÊçÆÂ∫ìÊ®°Âºè
      }
    });

    let output = '';
    let errorOutput = '';
    let jsonData = '';

    pythonProcess.stdout.on('data', (data) => {
      const chunk = data.toString();
      output += chunk;
      console.log('Python stdout:', chunk);
      
      // ÊèêÂèñJSONÊï∞ÊçÆ
      if (chunk.includes('üìä JSON_DATA_START')) {
        jsonData = '';
      } else if (chunk.includes('üìä JSON_DATA_END')) {
        // JSONÊï∞ÊçÆÁªìÊùüÔºå‰∏çÈúÄË¶ÅÂ§ÑÁêÜ
      } else if (jsonData !== null) {
        jsonData += chunk;
      }
    });

    pythonProcess.stderr.on('data', (data) => {
      const chunk = data.toString();
      errorOutput += chunk;
      console.log('Python stderr:', chunk);
    });

    pythonProcess.on('close', async (code) => {
      if (code === 0) {
        try {
          // Ëß£ÊûêJSONÊï∞ÊçÆ
          if (jsonData.trim()) {
            const parsedData = JSON.parse(jsonData.trim());
            console.log('üìä Ëß£ÊûêÂà∞Áà¨Ëô´Êï∞ÊçÆ:', parsedData);
            
            // ‰øùÂ≠òÊï∞ÊçÆÂà∞Êï∞ÊçÆÂ∫ì
            if (parsedData.success && parsedData.comments && parsedData.comments.length > 0) {
              console.log(`üíæ ‰øùÂ≠ò ${parsedData.comments.length} Êù°ËØÑËÆ∫Âà∞Êï∞ÊçÆÂ∫ì...`);
              
              // ËøôÈáåÈúÄË¶ÅÂÆûÁé∞‰øùÂ≠òÂà∞Êï∞ÊçÆÂ∫ìÁöÑÈÄªËæë
              // ÊöÇÊó∂ÂÖàËøîÂõûÊàêÂäüÔºåÂÆûÈôÖ‰øùÂ≠òÈÄªËæëÈúÄË¶ÅÊ†πÊçÆÊï∞ÊçÆÂ∫ìÁªìÊûÑÂÆûÁé∞
              resolve({ success: true, data: parsedData });
            } else {
              resolve({ success: true, data: parsedData });
            }
          } else {
            resolve({ success: true });
          }
        } catch (error) {
          console.error('Ëß£ÊûêÁà¨Ëô´Êï∞ÊçÆÂ§±Ë¥•:', error);
          resolve({ success: true });
        }
      } else {
        resolve({ 
          success: false, 
          error: errorOutput || 'Áà¨Ëô´ÊâßË°åÂ§±Ë¥•' 
        });
      }
    });

    // ËÆæÁΩÆË∂ÖÊó∂
    setTimeout(() => {
      pythonProcess.kill();
      resolve({ 
        success: false, 
        error: 'Áà¨Ëô´ÊâßË°åË∂ÖÊó∂' 
      });
    }, 120000); // 120ÁßíË∂ÖÊó∂
  });
}

